[{"/Users/moturhan/WebstormProjects/webrtc-nestjs-react-example/web/src/App.js":"1","/Users/moturhan/WebstormProjects/webrtc-nestjs-react-example/web/src/pages/index.js":"2","/Users/moturhan/WebstormProjects/webrtc-nestjs-react-example/web/src/utils/peer-video-connection.js":"3","/Users/moturhan/WebstormProjects/webrtc-nestjs-react-example/web/src/index.js":"4","/Users/moturhan/WebstormProjects/webrtc-nestjs-react-example/web/src/components/atoms/index.js":"5","/Users/moturhan/WebstormProjects/webrtc-nestjs-react-example/web/src/components/molecules/MoleculesVideoControls.js":"6","/Users/moturhan/WebstormProjects/webrtc-nestjs-react-example/web/src/pages/Room.jsx":"7","/Users/moturhan/WebstormProjects/webrtc-nestjs-react-example/web/src/components/molecules/MoleculesRemoteVideo.jsx":"8","/Users/moturhan/WebstormProjects/webrtc-nestjs-react-example/web/src/components/atoms/AtomsVideo.jsx":"9","/Users/moturhan/WebstormProjects/webrtc-nestjs-react-example/web/src/reportWebVitals.js":"10","/Users/moturhan/WebstormProjects/webrtc-nestjs-react-example/web/src/components/molecules/index.js":"11","/Users/moturhan/WebstormProjects/webrtc-nestjs-react-example/web/src/pages/Main.jsx":"12","/Users/moturhan/WebstormProjects/webrtc-nestjs-react-example/web/src/components/layout/Gallery.jsx":"13","/Users/moturhan/WebstormProjects/webrtc-nestjs-react-example/web/src/components/organisms/OrganismsMain.jsx":"14"},{"size":393,"mtime":1618598865596,"results":"15","hashOfConfig":"16"},{"size":48,"mtime":1618597512621,"results":"17","hashOfConfig":"18"},{"size":3081,"mtime":1635150326757,"results":"19","hashOfConfig":"16"},{"size":580,"mtime":1618598865605,"results":"20","hashOfConfig":"16"},{"size":206,"mtime":1618598865600,"results":"21","hashOfConfig":"16"},{"size":1282,"mtime":1618598865602,"results":"22","hashOfConfig":"16"},{"size":7893,"mtime":1635151838966,"results":"23","hashOfConfig":"16"},{"size":601,"mtime":1635119955503,"results":"24","hashOfConfig":"16"},{"size":456,"mtime":1635104347299,"results":"25","hashOfConfig":"16"},{"size":364,"mtime":1618598865606,"results":"26","hashOfConfig":"16"},{"size":158,"mtime":1618598865602,"results":"27","hashOfConfig":"16"},{"size":1515,"mtime":1618598865605,"results":"28","hashOfConfig":"16"},{"size":188,"mtime":1635104528720,"results":"29","hashOfConfig":"16"},{"size":544,"mtime":1618598865603,"results":"30","hashOfConfig":"16"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kifr76",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9ha6t9",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"53"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},"/Users/moturhan/WebstormProjects/webrtc-nestjs-react-example/web/src/App.js",[],"/Users/moturhan/WebstormProjects/webrtc-nestjs-react-example/web/src/pages/index.js",[],"/Users/moturhan/WebstormProjects/webrtc-nestjs-react-example/web/src/utils/peer-video-connection.js",[],"/Users/moturhan/WebstormProjects/webrtc-nestjs-react-example/web/src/index.js",[],"/Users/moturhan/WebstormProjects/webrtc-nestjs-react-example/web/src/components/atoms/index.js",[],"/Users/moturhan/WebstormProjects/webrtc-nestjs-react-example/web/src/components/molecules/MoleculesVideoControls.js",[],["63","64"],"/Users/moturhan/WebstormProjects/webrtc-nestjs-react-example/web/src/pages/Room.jsx",["65","66","67","68","69","70","71","72"],"import styles from '../App.css';\nimport { OrganismsHeader, OrganismsMain } from '../components/organisms';\nimport logo from '../images/logo.svg';\nimport {\n  MoleculesLocalVideo,\n  MoleculesRemoteVideo,\n  MoleculesVideo,\n  MoleculesVideoControls,\n} from '../components/molecules';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { createPeerConnectionContext } from '../utils/peer-video-connection';\nimport { useParams } from 'react-router-dom';\nimport { Gallery } from '../components/layout';\n\nconst senders = [];\nconst peerVideoConnection = createPeerConnectionContext();\n\nexport const Room = () => {\n  const { room } = useParams();\n  const [connectedUsers, setConnectedUsers] = useState([]);\n  const [userMediaStream, setUserMediaStream] = useState(null);\n  const [displayMediaStream, setDisplayMediaStream] = useState(null);\n  const [startTimer, setStartTimer] = useState(false);\n  const [isFullScreen, setFullScreen] = useState(false);\n\n  const galleryRef = useRef();\n\n  useCalculateVideoLayout(galleryRef, connectedUsers.length + 1);\n\n  const localVideo = useRef();\n  const mainRef = useRef();\n\n  useEffect(() => {\n    const createMediaStream = async () => {\n      if (!userMediaStream) {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          video: {\n            width: { min: 640, ideal: 1920 },\n            height: { min: 400, ideal: 1080 },\n            aspectRatio: { ideal: 1.7777777778 },\n          },\n          audio: true,\n        });\n\n        if (localVideo.current) {\n          localVideo.current.srcObject = stream;\n        }\n\n        setUserMediaStream(stream);\n\n        peerVideoConnection.joinRoom(room);\n        peerVideoConnection.onAddUser((user) => {\n          setConnectedUsers((users) => [...users, user]);\n          peerVideoConnection.addPeerConnection(`${user}`, localVideo.current.srcObject, (_stream) => {\n            document.getElementById(user).srcObject = _stream;\n          });\n        });\n\n        peerVideoConnection.onRemoveUser((socketId) => {\n          setConnectedUsers((users) => users.filter((user) => user !== socketId));\n          peerVideoConnection.removePeerConnection(socketId);\n        });\n\n        peerVideoConnection.onUpdateUserList((users) => {\n          setConnectedUsers(users);\n          users.forEach((user) => {\n            peerVideoConnection.addPeerConnection(`${user}`, localVideo.current.srcObject, (_stream) => {\n              document.getElementById(user).srcObject = _stream;\n            });\n            peerVideoConnection.callUser(user);\n          });\n        });\n\n        peerVideoConnection.onAnswerMade((socket) => peerVideoConnection.callUser(socket));\n      }\n    };\n\n    createMediaStream();\n  }, []);\n\n  async function shareScreen() {\n    const stream = displayMediaStream || (await navigator.mediaDevices.getDisplayMedia());\n\n    await peerVideoConnection.senders\n      .find((sender) => sender.track.kind === 'video')\n      .replaceTrack(stream.getTracks()[0]);\n\n    stream.getVideoTracks()[0].addEventListener('ended', () => {\n      cancelScreenSharing(stream);\n    });\n\n    localVideo.current.srcObject = stream;\n\n    setDisplayMediaStream(stream);\n  }\n\n  async function cancelScreenSharing(stream) {\n    await peerVideoConnection.senders\n      .find((sender) => sender.track.kind === 'video')\n      .replaceTrack(userMediaStream.getTracks().find((track) => track.kind === 'video'));\n\n    localVideo.current.srcObject = userMediaStream;\n    stream.getTracks().forEach((track) => track.stop());\n    setDisplayMediaStream(null);\n  }\n\n  function fullScreen() {\n    setFullScreen(true);\n    const elem = mainRef.current;\n    if (elem.requestFullscreen) {\n      elem.requestFullscreen();\n    } else if (elem.msRequestFullscreen) {\n      elem.msRequestFullscreen();\n    } else if (elem.mozRequestFullScreen) {\n      elem.mozRequestFullScreen();\n    } else if (elem.webkitRequestFullscreen) {\n      elem.webkitRequestFullscreen();\n    }\n  }\n\n  function cancelFullScreen() {\n    if (document.exitFullscreen) {\n      document.exitFullscreen();\n    } else if (document.mozCancelFullScreen) {\n      document.mozCancelFullScreen();\n    } else if (document.webkitExitFullscreen) {\n      document.webkitExitFullscreen();\n    } else if (document.msExitFullscreen) {\n      document.msExitFullscreen();\n    }\n  }\n\n  function handleFullScreen(isFullScreen) {\n    setFullScreen(isFullScreen);\n    if (isFullScreen) {\n      fullScreen();\n    } else {\n      cancelFullScreen();\n    }\n  }\n\n  async function handleScreenSharing(isScreenShared) {\n    if (isScreenShared) {\n      await shareScreen();\n    } else {\n      await cancelScreenSharing(displayMediaStream);\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <OrganismsHeader\n        onNavItemSelect={(user) => peerVideoConnection.callUser(user.id)}\n        title=\"WebRTC Example\"\n        picture={logo}\n      />\n\n      <div className=\"main\" ref={mainRef}>\n        <Gallery ref={galleryRef}>\n          <MoleculesVideo ref={localVideo} autoPlay playsInline muted  />\n          {connectedUsers.map((user) => (\n              <MoleculesVideo key={user} onClick={() => peerVideoConnection.callUser(user)} id={user} autoPlay playsInline />\n          ))}\n        </Gallery>\n\n        <MoleculesVideoControls\n          isScreenSharing={Boolean(displayMediaStream)}\n          onScreenShare={handleScreenSharing}\n          isFullScreen={isFullScreen}\n          onFullScreen={handleFullScreen}\n          isTimerStarted={startTimer}\n        />\n      </div>\n    </div>\n  );\n};\n\n// https://adosov.dev/zoom-video-gallery-p1/\nfunction calculateLayout(containerWidth, containerHeight, videoCount, aspectRatio) {\n  let bestLayout = {\n    area: 0,\n    cols: 0,\n    rows: 0,\n    width: 0,\n    height: 0,\n  };\n\n  // brute-force search layout where video occupy the largest area of the container\n  for (let cols = 1; cols <= videoCount; cols++) {\n    const rows = Math.ceil(videoCount / cols);\n    const hScale = containerWidth / (cols * aspectRatio);\n    const vScale = containerHeight / rows;\n    let width;\n    let height;\n    if (hScale <= vScale) {\n      width = Math.floor(containerWidth / cols);\n      height = Math.floor(width / aspectRatio);\n    } else {\n      height = Math.floor(containerHeight / rows);\n      width = Math.floor(height * aspectRatio);\n    }\n    const area = width * height;\n    if (area > bestLayout.area) {\n      bestLayout = {\n        area,\n        width,\n        height,\n        rows,\n        cols,\n      };\n    }\n  }\n  return bestLayout;\n}\n\nconst useCalculateVideoLayout = (gallery, videoCount) => {\n  useEffect(() => {\n    const recalculateLayout = () => {\n      const headerHeight = document.getElementsByTagName('header')?.[0]?.offsetHeight;\n      const aspectRatio = 16 / 9;\n\n      const screenWidth = document.body.getBoundingClientRect().width;\n      const screenHeight = document.body.getBoundingClientRect().height - headerHeight;\n\n      const { width, height, cols } = calculateLayout(screenWidth, screenHeight, videoCount, aspectRatio);\n\n      gallery.current?.style?.setProperty('--width', width + 'px');\n      gallery.current?.style?.setProperty('--height', height + 'px');\n      gallery.current?.style?.setProperty('--cols', cols + '');\n    };\n\n    recalculateLayout();\n\n    window.addEventListener('resize', recalculateLayout);\n\n    return () => {\n      window.removeEventListener('resize', recalculateLayout);\n    };\n  }, [gallery.current, videoCount]);\n};\n/*\n\n<OrganismsMain ref={mainRef}>\n        <MoleculesRemoteVideo ref={remoteVideo} autoPlay />\n        <MoleculesLocalVideo ref={localVideo} autoPlay muted />\n        <MoleculesVideoControls\n          isScreenSharing={Boolean(displayMediaStream)}\n          onScreenShare={handleScreenSharing}\n          isFullScreen={isFullScreen}\n          onFullScreen={handleFullScreen}\n          isTimerStarted={startTimer}\n        />\n      </OrganismsMain>\n */\n","/Users/moturhan/WebstormProjects/webrtc-nestjs-react-example/web/src/components/molecules/MoleculesRemoteVideo.jsx",[],"/Users/moturhan/WebstormProjects/webrtc-nestjs-react-example/web/src/components/atoms/AtomsVideo.jsx",[],"/Users/moturhan/WebstormProjects/webrtc-nestjs-react-example/web/src/reportWebVitals.js",[],["73","74"],"/Users/moturhan/WebstormProjects/webrtc-nestjs-react-example/web/src/components/molecules/index.js",[],"/Users/moturhan/WebstormProjects/webrtc-nestjs-react-example/web/src/pages/Main.jsx",[],"/Users/moturhan/WebstormProjects/webrtc-nestjs-react-example/web/src/components/layout/Gallery.jsx",[],"/Users/moturhan/WebstormProjects/webrtc-nestjs-react-example/web/src/components/organisms/OrganismsMain.jsx",["75"],"import styled from 'styled-components';\nimport React from 'react';\n\nexport const OrganismsMain = styled.main`\n  flex: 1;\n  position: relative;\n  margin-left: ${(props) => (props.full ? '0' : '280px')};\n  height: calc(100vh - 64px);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background: ${(props) => (props.full ? '#16202c' : 'black')};\n\n  @media screen and (max-width: 936px) {\n    margin-left: 0;\n    flex-direction: column;\n    align-items: flex-start;\n    justify-content: flex-start;\n    z-index: inherit;\n  }\n`;\n",{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","severity":1,"message":"81","line":1,"column":8,"nodeType":"82","messageId":"83","endLine":1,"endColumn":14},{"ruleId":"80","severity":1,"message":"84","line":2,"column":27,"nodeType":"82","messageId":"83","endLine":2,"endColumn":40},{"ruleId":"80","severity":1,"message":"85","line":5,"column":3,"nodeType":"82","messageId":"83","endLine":5,"endColumn":22},{"ruleId":"80","severity":1,"message":"86","line":6,"column":3,"nodeType":"82","messageId":"83","endLine":6,"endColumn":23},{"ruleId":"80","severity":1,"message":"87","line":15,"column":7,"nodeType":"82","messageId":"83","endLine":15,"endColumn":14},{"ruleId":"80","severity":1,"message":"88","line":23,"column":22,"nodeType":"82","messageId":"83","endLine":23,"endColumn":35},{"ruleId":"89","severity":1,"message":"90","line":79,"column":6,"nodeType":"91","endLine":79,"endColumn":8,"suggestions":"92"},{"ruleId":"89","severity":1,"message":"93","line":239,"column":6,"nodeType":"91","endLine":239,"endColumn":35,"suggestions":"94"},{"ruleId":"76","replacedBy":"95"},{"ruleId":"78","replacedBy":"96"},{"ruleId":"80","severity":1,"message":"97","line":2,"column":8,"nodeType":"82","messageId":"83","endLine":2,"endColumn":13},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","'OrganismsMain' is defined but never used.","'MoleculesLocalVideo' is defined but never used.","'MoleculesRemoteVideo' is defined but never used.","'senders' is assigned a value but never used.","'setStartTimer' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'room' and 'userMediaStream'. Either include them or remove the dependency array.","ArrayExpression",["100"],"React Hook useEffect has a missing dependency: 'gallery'. Either include it or remove the dependency array. Mutable values like 'gallery.current' aren't valid dependencies because mutating them doesn't re-render the component.",["101"],["98"],["99"],"'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},"Update the dependencies array to be: [room, userMediaStream]",{"range":"106","text":"107"},"Update the dependencies array to be: [gallery, videoCount]",{"range":"108","text":"109"},[2713,2715],"[room, userMediaStream]",[7409,7438],"[gallery, videoCount]"]